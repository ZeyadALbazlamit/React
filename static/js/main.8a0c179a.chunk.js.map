{"version":3,"sources":["component/b.jsx","component/nav.jsx","component/a.jsx","component/pic.jsx","component/c.jsx","component/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Con","Props","useState","d","setd","Provider","value","change","event","target","children","Nav","con","useContext","class","onClick","console","log","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","placeholder","onChange","A","props","src","picture","alt","name","href","price","Pic","pic","useEffect","random","Math","floor","length","arr","RoboteName","i","toString","setImg","img","setNumber","map","a","key","Chart","Footer","action","App","className","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a0c179a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport const Context =React.createContext();\r\nexport  function Con(Props)\r\n{\r\n    function change(event)\r\n    {\r\nsetd(event.target.value);\r\n\r\n\r\n    }\r\nconst [d,setd] =useState('');\r\n\r\n return (\r\n\r\n<Context.Provider value= {{d,setd,change}}>\r\n {Props.children}\r\n</Context.Provider>\r\n            );\r\n}\r\n \r\n\r\n","import React, {useContext} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./nav.css\";\r\nimport {Context} from \"./b\";\r\n export default function Nav() {\r\nconst con= useContext(Context);\r\n  function consol (){console.log(con.d)}\r\n\r\n  return(\r\n\r\n<nav class=\"navbar  navbar-expand-lg navbar-dark bg-primary \">\r\n\r\n  <button onClick={consol}  class=\"navbar-toggler\" type=\"button\"  data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  \r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n    <li class=\"nav-item\">\r\n<Link class=\"nav-link \" to=\"/c\">Example</Link>\r\n      </li> \r\n      \r\n      <li class=\"nav-item\">\r\n      <Link class=\"nav-link\" to=\"/\">  Robots </Link>\r\n      </li>\r\n     \r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n   \r\n<Link class=\"nav-link  cw\" to=\"/\">Count <span class=\"c\"> {con.d}</span></Link>\r\n\r\n      <input class=\"form-control mr-sm-2\" \r\n      type=\"number\"\r\n       placeholder=\"Enter the number of robots\"\r\n        onChange={con.change}\r\n \r\n     />\r\n      \r\n      </form>\r\n  </div>\r\n</nav>\r\n);\r\n}\r\n","import React from 'react';\r\nimport \"./a.css\";\r\n\r\nfunction A(props){\r\n    return (\r\n      \r\n<div class=\"card cl\">\r\n      <div class=\"front cl\">\r\n        <img src={props.picture} alt=\"\" />\r\n      </div>\r\n      <div class=\"back cl\">\r\n        <div class=\"back-content middle cl\">\r\n          <h2></h2>\r\n          <span class=\"cl\">Name of the robote:</span>\r\n    < div class=\"cl\">{props.name}</div>\r\n          <div class=\"sm\">\r\n            <a href=\"https://web.facebook.com/zeyad.albazlamit\"><i class=\"fab fa-facebook-f face\"></i></a>\r\n            <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\r\n            <a href=\"#\"><i class=\"fab fa-youtube re\"></i></a>\r\n            <a href=\"#\"><i class=\"fab fa-instagram insta\"></i></a>\r\n          </div>\r\n    <div class=\"insta\"><strong>{props.price} $</strong></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      );\r\n}\r\n \r\n\r\nexport default A;","import React, { useState, useContext,useEffect, useLayoutEffect } from 'react';\r\nimport A from \"./a\";\r\n\r\nimport {Context} from \"./b\";\r\n\r\nfunction Pic()\r\n{\r\n    const con= useContext(Context);\r\n\r\n\r\nconst pic='https://robohash.org/';\r\nuseEffect(()=>{\r\n    setNumber();\r\n},[]\r\n\r\n);\r\n\r\nfunction setNumber()\r\n{ \r\nconst name=[\r\n \"Leanne Graham\",\"Kulas Light\",\r\n \"Kulas Light\", \"Ervin Howell\",\r\n\"Victor Plains\", \"Wisokyburgh\",\r\n \"Clementine Bauch\",\"Romaguera-Jacobson\",\r\n \"Patricia Lebsack\",\r\n\"Chelsey Dietrich\",\"Mrs. Dennis Schulist\",\r\n \"Kurtis Weissnat\", \"Nicholas Runolfsdottir V\",\r\n  \"Bartholomebury\"\r\n];\r\nconst random = Math.floor(Math.random() * name.length);\r\nconst arr=[{picture:pic+'45',RoboteName:name[8],price:random}];    \r\nfor(let i=0;i<con.d;i++)\r\n   arr[i]={picture:pic+(i+4).toString(),RoboteName:name[i%13],price:(random*i*i/2)%600}\r\n    setImg([...img,...arr]);\r\n      \r\n        \r\n    /*\r\nfor(let i=0;i<3;i++)\r\n{\r\nsetImg([...img+{picture:pic+i.toString}]);\r\nconsole.log(img[i].picture);\r\n}\r\n*/\r\n}\r\nconst [img,setImg]=useState([ ]);\r\n\r\n\r\n return (\r\n<div>\r\n<ul>\r\n    {img.map( a => {\r\nreturn(\r\n    <>\r\n   \r\n  { <A key={a.picture} picture={a.picture} name={a.RoboteName} price={a.price}/>}\r\n </>\r\n     )\r\n}\r\n \r\n    )\r\n}\r\n    </ul>\r\n\r\n   </div>\r\n    );\r\n\r\n}\r\n \r\n\r\nexport default Pic;","import React, { useState, useContext } from 'react';\r\nimport A from \"./a\";\r\nimport \"./c.css\";\r\nexport default function Chart()\r\n{\r\n  \r\n    return (\r\n    \r\n    <div>\r\n\r\n<h1>This is example of router </h1>\r\n<A   picture=\"https://robohash.org/32e2132\" price=\"400\" name=\"Ahmad\"/>\r\n\r\n    </div>\r\n      );\r\n}\r\n \r\n\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nexport default function Footer()\r\n{\r\n    return (\r\n\r\n\r\n        <footer class=\"m-t\">\r\n        <div class=\"footer-container \">\r\n          <div class=\"left-col\">\r\n            <img src=\"logo.png\" alt=\"\" class=\"logo\"/>\r\n            <div class=\"social-media\">\r\n              <a href=\"#\"><i class=\"fab fa-facebook-f w\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-instagram w\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-youtube\"></i></a>\r\n              <a href=\"#\"><i class=\"fab fa-linkedin-in w\"></i></a>\r\n            </div>\r\n            <p class=\"rights-text w\" >Â© 2020 Created By Zeyad-ALbazlamit All Rights Reserved.</p>\r\n          </div>\r\n  \r\n          <div class=\"right-col\">\r\n            <h1>Our Newsletter</h1>\r\n            \r\n            <p class=\"w\">Enter Your Email to get our news and updates.</p>\r\n            <form action=\"\" class=\"newsletter-form\">\r\n              <input type=\"text\" class=\"txtb\" placeholder=\"Enter Your Email\"/>\r\n              <input type=\"submit\" class=\"btn\" value=\"submit\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n      );\r\n}\r\n \r\n\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch,Route} from 'react-router-dom';\nimport './App.css';\nimport Nav from \"./component/nav\";\nimport Pic from \"./component/pic\";\n//import B from \"./component/b\";\nimport Chart from \"./component/c\";\nimport Footer from \"./component/Footer\";\nimport {Con} from \"./component/b\";\nfunction App() {\n  \n  return (\n\n    \n \n    <Router>\n    <div className=\"App\">\n  <Con>\n    <Nav />\n  \n \n      <Switch>\n      <Route exact path='/' component={Pic} />\n      <Route  path='/b' component={Con} />\n      <Route  path='/c' component={Chart} />\n     \n      </Switch>\n  \n      <Footer /> \n      </Con>\n    </div>\n    </Router>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}